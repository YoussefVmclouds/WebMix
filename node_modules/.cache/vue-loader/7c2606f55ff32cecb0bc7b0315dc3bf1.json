{"remainingRequest":"/Users/youssef/Downloads/WebMix/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/youssef/Downloads/WebMix/src/views/WebMix.vue?vue&type=template&id=dc5f5dbc&","dependencies":[{"path":"/Users/youssef/Downloads/WebMix/src/views/WebMix.vue","mtime":1648050928317},{"path":"/Users/youssef/Downloads/WebMix/node_modules/cache-loader/dist/cjs.js","mtime":1644235715462},{"path":"/Users/youssef/Downloads/WebMix/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1644235714698},{"path":"/Users/youssef/Downloads/WebMix/node_modules/cache-loader/dist/cjs.js","mtime":1644235715462},{"path":"/Users/youssef/Downloads/WebMix/node_modules/vue-loader/lib/index.js","mtime":1644235714281}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}